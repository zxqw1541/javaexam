package step12.ex03;

// final 사용 - 상속 불가!
// => 하위 클래스를 만들지 못하도록 선언
// => 다형적 변수는 항상 하위 클래스의 인스턴스 주소를 담을 수 있다.
//    그래서 해킹의 우려가 있다.
//    나쁜 의도로 원래의 클래스를 상속 받아서 기능을 변경한 다음에,
//    원래 클래스의 인스턴스 값이 들어갈 자리에 하위 클래스의 인스턴스 값을 넣을 수 있기 때문이다.
// => 원래 클래스의 자리에 기능을 바꾼 다른 클래스가 들어가지 못하도록 막기 위한 방법
//    => 클래스를 final로 선언한다.
public final class MyClass4 {
  final int value = 100;
  
  // 어차피 하위 클래스를 못만들기 때문에 
  // 메서드 
  public /*final*/ void m1() {
    System.out.println("테스트1.....");
  }
}
