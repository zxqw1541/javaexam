<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
  version="3.1"
  metadata-complete="true">
  

<!-- 컨텍스트 초기화 파라미터 선언 -->
  <context-param>
    <param-name>context-param1</param-name>
    <param-value>컨텍스트 파라미터 값</param-value>
  </context-param>
  
  <context-param>
    <param-name>context-param2</param-name>
    <param-value>컨텍스트 파라미터 값</param-value>
  </context-param>
  
  
  
<!-- 리스너 클래스 등록하기 
  => 클래스 이름만 지정하면 된다. 따로 URL 매핑을 할 필요가 없다.
  => 등록된 순서대로 호출된다. 물론 서블릿 컨테이너에서 객체를 생성할 것이다. 
-->
  <listener>
    <listener-class>listener.ServletContextListener01</listener-class>
  </listener>
  <listener>
    <listener-class>listener.ServletContextListener02</listener-class>
  </listener>
  <listener>
    <listener-class>listener.ServletContextAttributeListener01</listener-class>
  </listener>
  
<!-- 필터 클래스 등록하기 -->
  <filter>
    <filter-name>Filter01</filter-name>
    <filter-class>filter.Filter01</filter-class>
  </filter>
  
  <filter>
    <filter-name>Filter02</filter-name>
    <filter-class>filter.Filter02</filter-class>
  </filter>
  
  <filter>
    <filter-name>Filter03</filter-name>
    <filter-class>filter.Filter03</filter-class>
  </filter>
  
  <filter>
    <filter-name>Filter04</filter-name>
    <filter-class>filter.Filter04</filter-class>
  </filter>
  
  <!-- Filter05가 참조할 값을 다음과 같이 초기화 파라미터 태그로 지정할 수 있다. -->
  <filter>
    <filter-name>Filter05</filter-name>
    <filter-class>filter.Filter05</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>name</param-name>
      <param-value>홍길동</param-value>
    </init-param>
  </filter>
  
  <filter>
    <filter-name>CountFilter</filter-name>
    <filter-class>test.CountFilter</filter-class>
  </filter>
  
<!-- 필터를 실행할 URL을 지정하기 -->
<!-- URL이 같으면 먼저 선언한 필터를 먼저 실행한다.(mapping에 선언된 순서) -->
  <filter-mapping>
    <filter-name>CountFilter</filter-name>
    <url-pattern>/test/count</url-pattern>
  </filter-mapping>
   
  <filter-mapping>
    <filter-name>Filter05</filter-name>
    <url-pattern>*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>Filter04</filter-name>
    <url-pattern>*</url-pattern>
  </filter-mapping>
  
  <filter-mapping>
    <filter-name>Filter03</filter-name>
    <url-pattern>/step08/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>Filter01</filter-name>
    <url-pattern>/step08/servlet01</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>Filter02</filter-name>
    <url-pattern>/step08/servlet01</url-pattern>
  </filter-mapping>
  
  
  <servlet>
    <servlet-name>Servlet01</servlet-name>
    <servlet-class>servlet.Servlet01</servlet-class>
  </servlet>
  
  <servlet>
    <servlet-name>Servlet02</servlet-name>
    <servlet-class>servlet.Servlet02</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>Servlet03</servlet-name>
    <servlet-class>servlet.Servlet03</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>Servlet04</servlet-name>
    <servlet-class>servlet.Servlet04</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>CountServlet</servlet-name>
    <servlet-class>test.CountServlet</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>Servlet05</servlet-name>
    <servlet-class>servlet.Servlet05</servlet-class>
    <init-param>
    <param-name>param1</param-name>
    <param-value>오호라.....</param-value>
    </init-param>
  </servlet>
  
  
  <servlet-mapping>
    <servlet-name>Servlet01</servlet-name>
    <url-pattern>/step08/servlet01</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>Servlet02</servlet-name>
    <url-pattern>/step08/servlet02</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>Servlet03</servlet-name>
    <url-pattern>/test/servlet03</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>Servlet04</servlet-name>
    <url-pattern>/step08/servlet04</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>CountServlet</servlet-name>
    <url-pattern>/test/count</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>Servlet05</servlet-name>
    <url-pattern>/step08/servlet05</url-pattern>
  </servlet-mapping>

</web-app>
